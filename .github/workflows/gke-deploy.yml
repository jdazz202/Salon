name: Deploy Static Site to GKE

on:
  push:
    branches:
      - master  # or 'main' depending on your default branch

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
  GCP_ZONE: ${{ secrets.GCP_ZONE }}
  REGION: europe-west1  # üîÅ change this to your Artifact Registry region
  REPOSITORY: static-site-repo  # üîÅ change this to your Artifact Registry repo name
  IMAGE: ${{ secrets.GCP_PROJECT_ID }}.docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/static-site-repo/static-site:latest

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ env.PROJECT_ID }}
        service_account_key: ${{ env.GCP_SA_KEY }}
        export_default_credentials: true

    - name: Authenticate Docker to Artifact Registry
      run: |
        gcloud auth configure-docker $REGION-docker.pkg.dev --quiet

    - name: Build Docker Image
      run: |
        docker build -t $IMAGE .

    - name: Push Docker Image to Artifact Registry
      run: |
        docker push $IMAGE

    - name: Get GKE Credentials
      run: |
        gcloud container clusters get-credentials static-site-cluster \
          --zone $GCP_ZONE --project $PROJECT_ID

    - name: Deploy to GKE
      run: |
        kubectl apply -f - <<EOF
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: static-site
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: static-site
          template:
            metadata:
              labels:
                app: static-site
            spec:
              containers:
              - name: static-site
                image: $IMAGE
                ports:
                - containerPort: 80
        EOF

        kubectl apply -f - <<EOF
        apiVersion: v1
        kind: Service
        metadata:
          name: static-site-service
        spec:
          type: LoadBalancer
          selector:
            app: static-site
          ports:
            - protocol: TCP
              port: 80
              targetPort: 80
        EOF

    - name: Get External IP of LoadBalancer
      continue-on-error: true
      run: |
        echo "Waiting for LoadBalancer IP..."
        sleep 60
        kubectl get service static-site-service -o wide
